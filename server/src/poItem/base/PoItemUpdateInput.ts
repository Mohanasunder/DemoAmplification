/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsNumber,
  IsOptional,
  IsString,
  ValidateNested,
} from "class-validator";
import { MaterialWhereUniqueInput } from "../../material/base/MaterialWhereUniqueInput";
import { Type } from "class-transformer";
import { PoHeaderWhereUniqueInput } from "../../poHeader/base/PoHeaderWhereUniqueInput";
import { UnitOfMeasureWhereUniqueInput } from "../../unitOfMeasure/base/UnitOfMeasureWhereUniqueInput";

@InputType()
class PoItemUpdateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  amount?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  currency?: string | null;

  @ApiProperty({
    required: false,
    type: () => MaterialWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MaterialWhereUniqueInput)
  @IsOptional()
  @Field(() => MaterialWhereUniqueInput, {
    nullable: true,
  })
  material?: MaterialWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => PoHeaderWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PoHeaderWhereUniqueInput)
  @IsOptional()
  @Field(() => PoHeaderWhereUniqueInput, {
    nullable: true,
  })
  poHeader?: PoHeaderWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  quantity?: number | null;

  @ApiProperty({
    required: false,
    type: () => UnitOfMeasureWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UnitOfMeasureWhereUniqueInput)
  @IsOptional()
  @Field(() => UnitOfMeasureWhereUniqueInput, {
    nullable: true,
  })
  unitofMeasures?: UnitOfMeasureWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  unitPrice?: number | null;
}

export { PoItemUpdateInput };
